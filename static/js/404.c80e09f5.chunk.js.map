{"version":3,"file":"static/js/404.c80e09f5.chunk.js","mappings":"8TAAaA,EAAM,gCACNC,EAAU,mCACVC,EAAY,kCAElB,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,oGACeC,MAAM,GAAD,OAAIJ,EAAJ,uCAAsCC,IAD1D,cACGI,EADH,gBAEUA,EAAIC,OAFd,0GAMA,SAAeC,EAAtB,iDAAO,OAAP,oBAAO,WAA+BC,EAAKC,GAApC,uFACeL,MAAM,GAAD,OAAIJ,EAAJ,iCAAgCC,EAAhC,iBAAgDO,EAAhD,kBAA8DC,IADlF,cACGJ,EADH,gBAEUA,EAAIC,OAFd,0GAMA,SAAeI,EAAtB,+CAAO,OAAP,oBAAO,WAA2BC,GAA3B,uFACeP,MAAM,GAAD,OAAIJ,EAAJ,kBAAiBW,EAAjB,oBAA+BV,IADnD,cACGI,EADH,gBAEUA,EAAIC,OAFd,0GAKA,SAAeM,EAAtB,+CAAO,OAAP,oBAAO,WAA2BD,GAA3B,uFACeP,MAAM,GAAD,OAAIJ,EAAJ,kBAAiBW,EAAjB,4BAAuCV,IAD3D,cACGI,EADH,gBAEUA,EAAIC,OAFd,0GAKA,SAAeO,EAAtB,+CAAO,OAAP,oBAAO,WAA8BF,GAA9B,uFACeP,MAAM,GAAD,OAAIJ,EAAJ,kBAAiBW,EAAjB,4BAAuCV,IAD3D,cACGI,EADH,gBAEUA,EAAIC,OAFd,0G,2GCzBP,EAAuB,mBCAvB,EAAuB,uBAAvB,EAAyD,2B,kBCG5CQ,EAAW,SAAC,GAA0C,IAAxCC,EAAuC,EAAvCA,OAAQC,EAA+B,EAA/BA,cAAeC,EAAgB,EAAhBA,UAU9C,OAAO,iBAAKC,UAAWC,EAAhB,WACH,gBAAKC,IARS,OAAXL,EACG,GAAN,OAASb,EAAAA,IAAT,OAAqBa,GAElBM,EAKkBC,MAAM,MAAMC,IAAKP,KAClC,eAAGE,UAAWC,EAAd,kBAA8BH,MAC9B,eAAGE,UAAWC,EAAd,uBAAmCF,OAE9C,ECdc,SAASO,IACpB,OAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAOR,OALAE,EAAAA,EAAAA,YAAU,YACNlB,EAAAA,EAAAA,IAAYgB,GAASG,MAAK,SAAAC,GAAK,OAAIL,EAAQK,EAAMN,KAAlB,GAClC,GAAE,CAACE,KAGG,iBAAKV,UAAWC,EAAhB,UACFO,GAAQA,EAAKO,KAAI,YAAqD,IAAlDtB,EAAiD,EAAjDA,GAAIuB,EAA6C,EAA7CA,aAAclB,EAA+B,EAA/BA,cAAeC,EAAgB,EAAhBA,UACtD,OAAO,SAACH,EAAD,CACCC,OAAQmB,EACRC,KAAMnB,EACNC,UAAWA,GAHGN,EAKrB,IACgB,IAAhBe,EAAKU,SAAgB,oEAG7B,C,03XCzBD,SAASC,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQC,EAAKC,GACpE,IACE,IAAIC,EAAOP,EAAIK,GAAKC,GAChBE,EAAQD,EAAKC,KAInB,CAHE,MAAOC,GAEP,YADAP,EAAOO,EAET,CAEIF,EAAKG,KACPT,EAAQO,GAERG,QAAQV,QAAQO,GAAOf,KAAKU,EAAOC,EAEvC,CAEe,SAASQ,EAAkBC,GACxC,OAAO,WACL,IAAIC,EAAOC,KACPC,EAAOC,UACX,OAAO,IAAIN,SAAQ,SAAUV,EAASC,GACpC,IAAIF,EAAMa,EAAGK,MAAMJ,EAAME,GAEzB,SAASb,EAAMK,GACbT,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,OAAQI,EAClE,CAEA,SAASJ,EAAOe,GACdpB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,QAASe,EACnE,CAEAhB,OAAMiB,EACR,GACF,CACF,C","sources":["components/API.js","webpack://react-homework-template/./src/pages/Cast/Cast.module.css?cfbb","webpack://react-homework-template/./src/components/CastInfo/CastInfo.module.css?0a17","components/CastInfo/CastInfo.jsx","pages/Cast/Cast.jsx","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["export const URL = 'https://api.themoviedb.org/3/';\nexport const API_KEY = 'aabfee5c17d446062bdfd52627b4dc8d';\nexport const IMAGE_URL = 'https://image.tmdb.org/t/p/w500';\n\nexport async function getTrending() {\n    const res = await fetch(`${URL}/trending/movie/day?api_key=${API_KEY}`);\n    return await res.json();\n\n}\n\nexport async function getFilmBySearch(page,query) {\n    const res = await fetch(`${URL}/search/movie?api_key=${API_KEY}&page=${page}&query=${query}`);\n    return await res.json();\n\n}\n\nexport async function getFilmById(id) {\n    const res = await fetch(`${URL}/movie/${id}?api_key=${API_KEY}`);\n    return await res.json();\n}\n\nexport async function getCastById(id) {\n    const res = await fetch(`${URL}/movie/${id}/credits?api_key=${API_KEY}`);\n    return await res.json();\n}\n\nexport async function getReviewsById(id) {\n    const res = await fetch(`${URL}/movie/${id}/reviews?api_key=${API_KEY}`);\n    return await res.json();\n}","// extracted by mini-css-extract-plugin\nexport default {\"cast\":\"Cast_cast__YOhg9\",\"castCard\":\"Cast_castCard__QBNdO\",\"info\":\"Cast_info__+D43Y\"};","// extracted by mini-css-extract-plugin\nexport default {\"info\":\"CastInfo_info__owzBm\",\"castCard\":\"CastInfo_castCard__4C18T\"};","import { IMAGE_URL } from \"components/API\"\nimport css from '../CastInfo/CastInfo.module.css';\nimport image from '../../image/pngegg.png'\n\nexport const CastInfo = ({ poster, original_name, character }) => {\n    \n    const castImg = () => {\n        if(poster !== null){\n        return`${IMAGE_URL}${poster}`\n    }\n    return image\n    }\n\n\n    return <div className={css.castCard}>\n        <img src={castImg()} width=\"160\" alt={original_name} />\n            <p className={css.info}>Name:{original_name}</p>\n            <p className={css.info}>Character:{character}</p>\n        </div>\n}","import { useEffect, useState } from \"react\";\nimport { getCastById } from \"components/API\";\nimport { useParams } from \"react-router-dom\";\nimport css from '../Cast/Cast.module.css';\nimport { CastInfo } from \"components/CastInfo/CastInfo\";\nexport default function Cast() {\n    const [cast, setCast] = useState([]);\n    const { movieId } = useParams();\n\n    useEffect(() => {\n        getCastById(movieId).then(array => setCast(array.cast));  \n    }, [movieId])\n    \n    \n    return <div className={css.cast}>\n        {cast && cast.map(({ id, profile_path, original_name, character }) => {      \n        return <CastInfo key={id}\n                poster={profile_path}\n                name={original_name}\n                character={character}\n            />\n        })} \n        {cast.length === 0 && <p>Sorry!No information about the actors.</p>}\n        </div>\n \n}","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}"],"names":["URL","API_KEY","IMAGE_URL","getTrending","fetch","res","json","getFilmBySearch","page","query","getFilmById","id","getCastById","getReviewsById","CastInfo","poster","original_name","character","className","css","src","image","width","alt","Cast","useState","cast","setCast","movieId","useParams","useEffect","then","array","map","profile_path","name","length","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined"],"sourceRoot":""}